/** Use the `@tailwind` directive to insert Tailwind's `base`, `components`, `utilities` and `screens` styles into your CSS. */
@tailwind base;
@tailwind components;
@tailwind utilities;

.btn {
  /** Use `@apply` to inline any existing utility classes into your own custom CSS. */
  @apply font-bold py-2 px-4 rounded;
}

/** Use the @layer directive to tell Tailwind which "bucket" a set of custom styles belong to. Valid layers are a base, components, and utilities. */
@layer utilities {
  /** You can generate responsive, hover, focus, active, and other variants of your own utilities by wrapping their definitions in the @variants directive. */
  @variants hover, focus {
    .filter-none {
      filter: none;
    }
    .filter-grayscale {
      filter: grayscale(100%);
    }
  }
}

/* You can generate responsive variants of your own classes by wrapping their definitions in the `@responsive` directive. */
@responsive {
  .bg-brand-gradient {
    background-image: linear-gradient(#3490dc, #6574cd) !important;
  }
}

/** The `@screen` directive allows you to create media queries that reference your breakpoints by **name** instead of duplicating their values in your own CSS */
@screen sm {
  /* ... */
}

/** Use the theme() function to access your Tailwind config values using dot notation. */
.content-area {
  height: calc(100vh - theme('spacing.12'));
}
